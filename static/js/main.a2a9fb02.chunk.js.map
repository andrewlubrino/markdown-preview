{"version":3,"sources":["App.js","index.js"],"names":["Previewer","React","Component","constructor","props","super","handleChange","event","clean","DOMPurify","sanitize","marked","target","value","this","setState","input","output","on","state","element","handleMaximize","name","bind","render","html","onOff","which","className","Style","Expand","Name","callBack","onChange","dangerouslySetInnerHTML","__html","NavBar","onTrigger","Icon","onClick","icon","faExpandArrowsAlt","faCompressAlt","rootElement","document","getElementById","ReactDOM"],"mappings":"6PAQA,MAAMA,UAAkBC,IAAMC,UAC5BC,YAAYC,GACVC,MAAMD,GADW,KAYnBE,aAAgBC,IACd,IAAIC,EAAQC,IAAUC,SAASC,IAAOJ,EAAMK,OAAOC,QACnDC,KAAKC,SAAS,CACZC,MAAOR,EACPS,OAAQV,EAAMK,OAAOC,MACrBK,GAAIJ,KAAKK,MAAMD,GACfE,QAASN,KAAKK,MAAMC,WAlBL,KAsBnBC,eAAkBC,IAChBR,KAAKC,SAAS,CACZC,MAAOF,KAAKK,MAAMH,MAClBC,OAAQH,KAAKK,MAAMF,OACnBC,IAAKJ,KAAKK,MAAMD,GAChBE,QAASE,KAzBXR,KAAKK,MAAQ,CACXH,MAAO,GACPC,OAAQ,GACRC,IAAI,EACJE,QAAS,MAEXN,KAAKR,aAAeQ,KAAKR,aAAaiB,KAAKT,MAC3CA,KAAKO,eAAiBP,KAAKO,eAAeE,KAAKT,MAsBjDU,SACE,MAAMC,EAAOX,KAAKK,MAAMH,MAClBU,EAAQZ,KAAKK,MAAMD,GACnBS,EAAQb,KAAKK,MAAMC,QAEzB,OAAIM,EACY,WAAVC,EAEA,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAgBC,MAAO,cAAtC,UACE,cAAC,EAAD,CACEC,QAAQ,EACRC,KAAK,SACLC,SAAUlB,KAAKO,iBAEjB,0BACER,MAAOC,KAAKK,MAAMF,OAClBW,UAAU,YACVK,SAAUnB,KAAKR,oBAOrB,qBAAKsB,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAgBC,MAAO,cAAtC,UACE,cAAC,EAAD,CACEC,QAAQ,EACRC,KAAK,UACLC,SAAUlB,KAAKO,iBAEjB,qBAAKa,wBAAyB,CAAEC,OAAQV,UAO9C,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CACEE,QAAQ,EACRC,KAAK,SACLC,SAAUlB,KAAKO,iBAEjB,0BACER,MAAOC,KAAKK,MAAMF,OAClBW,UAAU,YACVK,SAAUnB,KAAKR,kBAGnB,sBAAKsB,UAAU,gBAAf,UACE,cAAC,EAAD,CACEE,QAAQ,EACRC,KAAK,UACLC,SAAUlB,KAAKO,iBAEjB,qBAAKa,wBAAyB,CAAEC,OAAQV,YAQpD,MAAMW,UAAenC,IAAMC,UACzBC,YAAYC,GACVC,MAAMD,GADW,KAKnBiC,UAAY,KACVvB,KAAKV,MAAM4B,SAASlB,KAAKV,MAAM2B,OAJ/BjB,KAAKuB,UAAYvB,KAAKuB,UAAUd,KAAKT,MAOvCU,SACE,IAAIc,EACF,sBAAMC,QAASzB,KAAKuB,UAAWT,UAAU,eAAzC,SACE,cAAC,IAAD,CAAiBA,UAAU,SAASY,KAAMC,QAY9C,OARW3B,KAAKV,MAAM0B,SAEpBQ,EACE,sBAAMC,QAASzB,KAAKuB,UAAWT,UAAU,eAAzC,SACE,cAAC,IAAD,CAAiBA,UAAU,SAASY,KAAME,SAK9C,sBAAKd,UAAU,UAAf,UACE,mBAAGA,UAAU,SAAb,SAAuBd,KAAKV,MAAM2B,OACjCO,MAMMtC,QCvIf,MAAM2C,EAAcC,SAASC,eAAe,QAC5CC,IAAStB,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFmB,K","file":"static/js/main.a2a9fb02.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React from \"react\";\nimport marked from \"marked\";\nimport DOMPurify from \"dompurify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCompressAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faExpandArrowsAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Previewer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      output: \"\",\n      on: false,\n      element: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleMaximize = this.handleMaximize.bind(this);\n  }\n\n  handleChange = (event) => {\n    let clean = DOMPurify.sanitize(marked(event.target.value));\n    this.setState({\n      input: clean,\n      output: event.target.value,\n      on: this.state.on,\n      element: this.state.element\n    });\n  };\n\n  handleMaximize = (name) => {\n    this.setState({\n      input: this.state.input,\n      output: this.state.output,\n      on: !this.state.on,\n      element: name\n    });\n  };\n\n  render() {\n    const html = this.state.input;\n    const onOff = this.state.on;\n    const which = this.state.element;\n\n    if (onOff) {\n      if (which === \"Editor\") {\n        return (\n          <div className=\"container-style\">\n            <div className=\"element-style\" Style={\"width: 94%;\"}>\n              <NavBar\n                Expand={true}\n                Name=\"Editor\"\n                callBack={this.handleMaximize}\n              />\n              <textarea\n                value={this.state.output}\n                className=\"text-area\"\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"container-style\">\n            <div className=\"element-style\" Style={\"width: 94%;\"}>\n              <NavBar\n                Expand={true}\n                Name=\"Preview\"\n                callBack={this.handleMaximize}\n              />\n              <div dangerouslySetInnerHTML={{ __html: html }} />\n            </div>\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div className=\"container-style\">\n          <div className=\"element-style\">\n            <NavBar\n              Expand={false}\n              Name=\"Editor\"\n              callBack={this.handleMaximize}\n            />\n            <textarea\n              value={this.state.output}\n              className=\"text-area\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"element-style\">\n            <NavBar\n              Expand={false}\n              Name=\"Preview\"\n              callBack={this.handleMaximize}\n            />\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onTrigger = this.onTrigger.bind(this);\n  }\n\n  onTrigger = () => {\n    this.props.callBack(this.props.Name);\n  };\n\n  render() {\n    let Icon = (\n      <span onClick={this.onTrigger} className=\"button-style\">\n        <FontAwesomeIcon className=\"item-b\" icon={faExpandArrowsAlt} />\n      </span>\n    );\n\n    let maxi = this.props.Expand;\n    if (maxi) {\n      Icon = (\n        <span onClick={this.onTrigger} className=\"button-style\">\n          <FontAwesomeIcon className=\"item-b\" icon={faCompressAlt} />\n        </span>\n      );\n    }\n    return (\n      <div className=\"nav-bar\">\n        <p className=\"item-a\">{this.props.Name}</p>\n        {Icon}\n      </div>\n    );\n  }\n}\n\nexport default Previewer;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Previewer from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Previewer />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}